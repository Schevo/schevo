============================
 Release Schedule / Roadmap
============================

.. role:: raw-html(raw)
   :format: html

:Last Changed: $Date$

:Copyright: Copyright 2005 by Orbtech_ LLC.  All Rights Reserved.
            :raw-html:`<br />`
            Licensed under the `GNU Free Documentation License`_.

.. _GNU Free Documentation License: 
   http://www.gnu.org/copyleft/fdl.html

.. _Orbtech: http://orbtech.com/

.. sectnum::

.. contents::


This is a working document and will be updated frequently.


Schevo 3.0 series
=================


Schevo 3.0-beta2
----------------

In-progress:

* Additional documentation:

  - Schema definition reference.

* Web app support:

  - WSGI middleware.

  - Generalized web helper functions.

  - Schevo+Pylons template.

* Query objects, allowing queries to be composed of subqueries, and
  allowing introspection of queries to a point where a fully automatic
  ad-hoc query criteria specification UI could be built.

* View objects, allowing alternative views of entities, which may
  exclude fields normally used, or include additional fields.

* Better usage of `setuptools`.

  - Requirements for schevo extras.

  - Make ``evo`` script use Python egg entry points.

Candidates:

* Schema evolution support.

  - Schema syntax for schema evolution.

* More and clarified `evo db` actions:

  - `evo db create` for creating a new database.

  - `evo db update` for updating an existing database to a modified
    schema of the same version.

  - `evo db upgrade` for evolving a database from one version to the
    next.

* Split `schevo.database.open` into `open`, `create`, `update`, and
  `upgrade`.

* When creating a database, optionally store the location of the path
  used for the schema.  Store date/time schema was updated.  When
  updating an existing database, if the schema is not specified, use
  the stored location to retrieve the updated schema.


Schevo 3.0-rc1
--------------

Candidates:

* Additional documentation:

  - `evo` command reference.

* Additional unit test coverage:

  - Entity data creation attributes: `_initial` and `_sample`.

  - `allow` and `on_delete` specification in `f.entity` fields.

  - Execution of deletions involving various `on_delete`
    specifications.

  - Extent `by` method.


Schevo 3.0
----------

* First stable release in 3.0 series.


Schevo 3.1 series
=================

Candidates:

* Optional full-text indexing of string and unicode fields.

* Stress-test size limitations of Schevo and optimize
  accordingly. (Collaborate with Durus)

* Fixed window of RAM usage for low-level `schevo.store` indices,
  independent of object count. (Collaborate with Durus)

* Additional icon support:

  - Icons for certain values, like True/False in boolean fields, and
    certain initial values.

  - Icons for transactions and transaction methods.

* Schevo Navigator improvements:

  - Ellipsis at end of long tab titles.

  - Offer a browser-style of navigation using history stacks and
    multiple tabs.

  - Save user preferences pertaining to initial window size, and
    options such as "detach by default".

  - `Populate` menu for populating using sample data sets.

* `schevo.tiers` client/server capability.


Future features
===============

These features or changes have been noted for possible inclusion but
have not been scheduled into any release cycle.

* Entity inheritance.

* Inter-database references.

* Navigators for non-Qt toolkits:

  - PyGtk

* Replication:

  - `schevo.tiers` could also be a basis for a network of replicated
    servers that share data and synchronize the net effects of
    transactions.  Thus, a `schevo.tiers` client could connect to any
    of a number of servers.

  - Preferably would have the ability to maintain a network of several
    servers that would compensate for connectivity issues by electing
    new masters as necessary, or falling back to a read-only state.

..
     Local Variables:
     mode: rst
     End: 

